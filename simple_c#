Sub Main()
    Dim myList As Variant
    myList = Array("s", "a", "l", "y", "h", "e")
    
    Dim combinations As Variant
    combinations = GetCombinations(myList)
    
    Dim i As Integer, j As Integer
    For i = 0 To UBound(combinations)
        Debug.Print Join(combinations(i), ",")
    Next i
End Sub

Function GetCombinations(ByVal list As Variant) As Variant
    Dim n As Integer
    n = UBound(list) - LBound(list) + 1
    
    If n = 0 Then
        GetCombinations = Array(Array())
        Exit Function
    End If
    
    Dim head As Variant
    head = list(LBound(list))
    
    Dim tail As Variant
    ReDim tail(n - 2)
    Dim i As Integer
    For i = LBound(tail) To UBound(tail)
        tail(i) = list(i + 1)
    Next i
    
    Dim tailCombinations As Variant
    tailCombinations = GetCombinations(tail)
    
    Dim result As Variant
    ReDim result(UBound(tailCombinations) * n)
    
    Dim k As Integer
    k = 0
    
    Dim i As Integer, j As Integer
    For i = LBound(tailCombinations) To UBound(tailCombinations)
        Dim tailCombination As Variant
        tailCombination = tailCombinations(i)
        
        For j = 0 To UBound(tailCombination) + 1
            Dim combination As Variant
            ReDim combination(n - 1)
            
            Dim l As Integer
            For l = 0 To j - 1
                combination(l) = tailCombination(l)
            Next l
            
            combination(j) = head
            
            For l = j To UBound(tailCombination)
                combination(l + 1) = tailCombination(l)
            Next l
            
            result(k) = combination
            k = k + 1
        Next j
    Next i
    
    GetCombinations = result
End Function
